type Student {
	dni: ID!,
	studentName: String!,
	firstSurname: String!,
	secondSurname: String,
	dateOfBirth: String!,
	telephone: Int!,
	cycle: String!,
	group: String!,
	shift: String!,
	course: String!
}

extend type Query {
	getStudents: [Student]
	getStudent(dni: ID!): Student		
	getModulesFromStudent(dni: ID!): [Modules]
}

extend type Mutation {
	createStudent(dni: ID!, studentName: String!, firstSurname: String!, secondSurname: String, dateOfBirth: String!, telephone: Int!, cycle: String!, shift: String!, group: String!, course: String!): Student!
	updateStudentAll(oldDni: ID!, newDni: String!, studentName: String!, firstSurname: String!, secondSurname: String, dateOfBirth: String!, telephone: Int!, cycle: String!, shift: String!, group: String!, course: String!): Boolean!
	updateStudent(dni: ID!, studentName: String!, firstSurname: String!, secondSurname: String, dateOfBirth: String!, telephone: Int!, cycle: String!, shift: String!, group: String!, course: String!): Boolean!
	deleteStudent(dni: ID!): Boolean!
	saveModuleOnStudent(cod: ID!, dni: ID!): Boolean!
	deleteModuleOnStudent(cod: ID!, dni: ID!): Boolean!
}
